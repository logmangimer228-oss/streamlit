import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from io import StringIO

st.set_page_config(page_title="–ê–Ω–∞–ª—ñ–∑ Telegram-–∫–∞–Ω–∞–ª—É", layout="wide")

st.title("üìä –ê–Ω–∞–ª—ñ–∑ Telegram-–∫–∞–Ω–∞–ª—É")

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---
@st.cache_data
def load_data(uploaded_file):
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file, parse_dates=['datetime'])
    else:
        df = pd.read_csv("sample_posts.csv", parse_dates=['datetime'])

    df['date'] = df['datetime'].dt.date
    df['hour'] = df['datetime'].dt.hour
    df['weekday'] = df['datetime'].dt.day_name()

    ukrainian_days = {
        'Monday': '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫',
        'Tuesday': '–í—ñ–≤—Ç–æ—Ä–æ–∫',
        'Wednesday': '–°–µ—Ä–µ–¥–∞',
        'Thursday': '–ß–µ—Ç–≤–µ—Ä',
        'Friday': '–ü‚Äô—è—Ç–Ω–∏—Ü—è',
        'Saturday': '–°—É–±–æ—Ç–∞',
        'Sunday': '–ù–µ–¥—ñ–ª—è'
    }
    df['weekday'] = df['weekday'].map(ukrainian_days)

    df['engagement'] = df['reactions'] / df['views']
    return df

uploaded = st.file_uploader("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂ CSV-—Ñ–∞–π–ª –∑ –ø–æ—Å—Ç–∞–º–∏", type=["csv"])
df = load_data(uploaded)

st.write("### –î–∞–Ω—ñ:")
st.dataframe(df.head())

# --- –ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ ---
activity = df.groupby('date').agg({'views': 'mean', 'reactions': 'sum'}).reset_index()
st.write("### üìÖ –ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")
fig, ax = plt.subplots()
ax.plot(activity['date'], activity['views'], label='–°–µ—Ä–µ–¥–Ω—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∏')
ax.set_xlabel('–î–∞—Ç–∞')
ax.set_ylabel('–ü–µ—Ä–µ–≥–ª—è–¥–∏')
ax.legend()
st.pyplot(fig)

# --- –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –∑–∞–ª—É—á–µ–Ω–Ω—è ---
er_mean = df['engagement'].mean()
er_max = df['engagement'].max()
er_min = df['engagement'].min()

st.write("### üí¨ –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∑–∞–ª—É—á–µ–Ω–Ω—è")
st.metric("–°–µ—Ä–µ–¥–Ω—ñ–π ER", f"{er_mean:.2%}")
st.metric("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π ER", f"{er_max:.2%}")
st.metric("–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π ER", f"{er_min:.2%}")

# --- –ù–∞–π–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–π —á–∞—Å ---
time_eff = df.groupby('hour').agg({'views': 'mean', 'engagement': 'mean'}).reset_index()
best_hour_views = time_eff.loc[time_eff['views'].idxmax(), 'hour']
best_hour_er = time_eff.loc[time_eff['engagement'].idxmax(), 'hour']

st.write("### ‚è∞ –ù–∞–π–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–π —á–∞—Å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π")
st.info(f"–ù–∞–π–∫—Ä–∞—â–∞ –≥–æ–¥–∏–Ω–∞ –∑–∞ –ø–µ—Ä–µ–≥–ª—è–¥–∞–º–∏: **{best_hour_views}:00**")
st.info(f"–ù–∞–π–∫—Ä–∞—â–∞ –≥–æ–¥–∏–Ω–∞ –∑–∞ –∑–∞–ª—É—á–µ–Ω–Ω—è–º: **{best_hour_er}:00**")

# --- –¢–µ–ø–ª–æ–≤–∞ –∫–∞—Ä—Ç–∞ ---
st.write("### üî• –¢–µ–ø–ª–æ–≤–∞ –∫–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")
pivot = df.pivot_table(values='views', index='weekday', columns='hour', aggfunc='mean')
fig, ax = plt.subplots(figsize=(10,5))
sns.heatmap(pivot, cmap='YlGnBu', ax=ax)
st.pyplot(fig)

st.success("‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ!")