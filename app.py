import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

st.set_page_config(page_title="–ê–Ω–∞–ª—ñ–∑ Telegram-–∫–∞–Ω–∞–ª—É", layout="wide")
st.title("üìä –ê–Ω–∞–ª—ñ–∑ Telegram-–∫–∞–Ω–∞–ª—É")

@st.cache_data
def load_data(uploaded_file):
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file, parse_dates=['datetime'])
    else:
        df = pd.read_csv("sample_posts.csv", parse_dates=['datetime'])

    df['views'] = pd.to_numeric(df['views'], errors='coerce')
    df['reactions'] = pd.to_numeric(df['reactions'], errors='coerce')
    df = df.dropna(subset=['datetime', 'views', 'reactions'])

    df['date'] = pd.to_datetime(df['datetime'].dt.date)  # –≤–∞–∂–ª–∏–≤–æ: datetime –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    df['hour'] = df['datetime'].dt.hour

    days_uk = ['–ü–æ–Ω–µ–¥—ñ–ª–æ–∫','–í—ñ–≤—Ç–æ—Ä–æ–∫','–°–µ—Ä–µ–¥–∞','–ß–µ—Ç–≤–µ—Ä','–ü‚Äô—è—Ç–Ω–∏—Ü—è','–°—É–±–æ—Ç–∞','–ù–µ–¥—ñ–ª—è']
    df['weekday'] = df['datetime'].dt.weekday.map(lambda x: days_uk[x])
    df['engagement'] = df['reactions'] / df['views']

    return df

uploaded = st.file_uploader("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂ CSV-—Ñ–∞–π–ª –∑ –ø–æ—Å—Ç–∞–º–∏", type=["csv"])
df = load_data(uploaded)

if df is not None and not df.empty:
    st.write("### –î–∞–Ω—ñ:")
    st.dataframe(df.sort_values('datetime'))

    st.write("### üìÖ –ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")
    activity = df.groupby('date').agg({'views':'mean','reactions':'sum'}).reset_index()
    activity = activity.sort_values('date')  # —â–æ–± –¥–∞—Ç–∏ –π—à–ª–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É

    fig, ax = plt.subplots(figsize=(6,3))  # –∑–º–µ–Ω—à–µ–Ω–∏–π —Ä–æ–∑–º—ñ—Ä
    ax.plot(activity['date'], activity['views'], marker='o', linewidth=1.5, label='–°–µ—Ä–µ–¥–Ω—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∏')
    ax.set_xlabel('–î–∞—Ç–∞', fontsize=8)
    ax.set_ylabel('–ü–µ—Ä–µ–≥–ª—è–¥–∏', fontsize=8)
    ax.legend(fontsize=7)
    ax.tick_params(axis='both', labelsize=7, rotation=45)
    st.pyplot(fig, clear_figure=True)

    er_mean = df['engagement'].mean()
    er_max = df['engagement'].max()
    er_min = df['engagement'].min()

    st.write("### üí¨ –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∑–∞–ª—É—á–µ–Ω–Ω—è")
    col1, col2, col3 = st.columns(3)
    col1.metric("–°–µ—Ä–µ–¥–Ω—ñ–π ER", f"{er_mean:.2%}")
    col2.metric("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π ER", f"{er_max:.2%}")
    col3.metric("–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π ER", f"{er_min:.2%}")

    time_eff = df.groupby('hour').agg({'views':'mean','engagement':'mean'}).reset_index()
    best_hour_views = int(time_eff.loc[time_eff['views'].idxmax(),'hour'])
    best_hour_er = int(time_eff.loc[time_eff['engagement'].idxmax(),'hour'])

    st.write("### ‚è∞ –ù–∞–π–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–π —á–∞—Å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π")
    st.info(f"–ù–∞–π–∫—Ä–∞—â–∞ –≥–æ–¥–∏–Ω–∞ –∑–∞ –ø–µ—Ä–µ–≥–ª—è–¥–∞–º–∏: **{best_hour_views}:00**")
    st.info(f"–ù–∞–π–∫—Ä–∞—â–∞ –≥–æ–¥–∏–Ω–∞ –∑–∞ –∑–∞–ª—É—á–µ–Ω–Ω—è–º: **{best_hour_er}:00**")

    st.success("‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ!")
else:
    st.warning("‚ö†Ô∏è –î–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ –∞–±–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ.")
